% !TEX encoding = UTF-8 Unicode
%%
%% texjazz-assignpoints.sty
%%
%% A LaTeX package to assign points within exercises and quizzes.
%%
%% Copyright (c) 2020-2021 ejazz.
%%
%----------
% This work is part of the TeXjazz bundle. It may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% The Current Maintainer of this work is ejazz <ejazz.fr@gmail.com>.
%
% This work consists of the files:
%     `texjazz-assignpoints.sty' and `texjazz-assignpoints[-fr].tex' (not yet fully available).
%----------

%-- Package identification

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{texjazz-assignpoints}%
  [2021/01/14 v0.1g
  − Accounting and display numeration assignments within exercises and quizzes environments]

%-- Utilities

\RequirePackage{xparse}% LaTeX3 syntax parser for LaTeX2e to define advanced commands/environments
\RequirePackage{etoolbox}% Swiss knife!
\RequirePackage{pgfkeys}% Key-value options management for commands and environments
%\RequirePackage{pgfopts}% Key-value options for packages and classes
\RequirePackage{ifthen}% An additional swiss knife! (for \whiledo command)
\RequirePackage{metalogox}% Cosmetics: to be tweaked with used font(s), not done
\RequirePackage{framed}% Cosmetics too: for adding a leftbar at first run message
\RequirePackage{xcolor}% Cosmetics again: for having a coloured leftbar at first run message
\RequirePackage{booktabs}% Cosmetics stil: for having elegant tabular simple layout
%- Booktabs settings
\setlength{\abovetopsep}{0pt}
\setlength{\aboverulesep}{0pt}
\setlength{\belowrulesep}{1pt}
\setlength{\belowbottomsep}{1pt}

%-- Printing lengths/points: spliting integer and decimal parts of a number/length

%- E. Gregorio solution to split integer and decimal part of a TeX length (used here in points):
%-   https://tex.stackexchange.com/questions/142320/[...]
%-      [...]separating-a-decimal-in-any-format-into-integer-and-fractional-parts-in-basic
\begingroup
  \catcode`P=12 \catcode`T=12 \lowercase{\endgroup
  \def\assignpointssplitbefore#1{%
    \expandafter\apts@strip@pt\expandafter\@assignpointssplitbefore\the\dimexpr#1PT\relax\@nil
  }
  \def\assignpointssplitafter#1{%
    \expandafter\apts@strip@pt\expandafter\@assignpointssplitafter\the\dimexpr#1PT\relax\@nil
  }
  \def\@assignpointssplitbefore#1.#2.#3PT\@nil{#1}
  \def\@assignpointssplitafter#1.#2.#3PT\@nil{#2}
  \def\apts@strip@pt#1#2PT#3\@nil{#1#2..PT\@nil}
}% Balance the open brace after \lowercase

%-- Helping commands for displaying points depending on the language and singular/plural forms

\newcommand*{\assignpointsdecimalsep}{{.}}
\newcommand{\assignpointsunitspace}{\,}% Small space between number and point "unit"
\newcommand{\assignpointsunitsingular}[1]{\def\assignpoints@unitsingular{{#1}}}
\newcommand{\assignpointsunitplural}[1]{\def\assignpoints@unitplural{{#1}}}

%-- Checking tools

\newtoggle{assignpoints@checkemptystring}

%- OLD FASHION: to test first run for displaying a message in the margin. Useful? Humm... Cosmetics!
%- See: https://tex.stackexchange.com/questions/47237/

\newif\if@assignpoints@firstrun% <-- Testing for the first LaTeX run (certainly to be improved)
\AtBeginDocument{%                   Cf. https://tex.stackexchange.com/questions/167799/
  \ifx\@assignpoints@firstrun@test\@undefined
    \@assignpoints@firstruntrue
  \else
    \@assignpoints@firstrunfalse
  \fi
  \write\@auxout{\string\gdef\string\@assignpoints@firstrun@test{}}%
}

\newenvironment{assignpointsleftbar}{% Used to add a left bar to the first run message (see below)
  \def\assingpointsframecommand{% Borrowed to Gonzalo Medina
    {\color{red!60!black}\vrule width 2pt depth 0pt}\hspace{4pt}%
  }%
  \MakeFramed{\parshape 1 0cm \dimexpr\linewidth-4pt\relax\FrameRestore}%
}{\endMakeFramed}

\newcommand{\assignpoints@runmessage}{% Message in the margin at first run (cf. \displaypoints)
  \hfill% 36 mm = 36/0.351459 pt = 102.430155438 pt
  \parbox[t]{102.5pt}{% It works for minimum margin of 36 mm, only printed if \marginparwidth > 36mm
    \begin{assignpointsleftbar}% Add a coloured vertical line to the message
      \footnotesize\itshape%
      \textbf{First \LaTeX{} run:} Exercises/quizzes point assignment has been done.
        Please rerun \LaTeX{} to get cross-references right.
    \end{assignpointsleftbar}
  }%
}

%-- Defining switches for environments layout and language (\newbool instead of \newif)

\newbool{assignpoints@usecustomlayout}
\newbool{assignpoints@exercise@layoutdefined}
\newbool{assignpoints@subexercise@layoutdefined}
\newbool{assignpoints@quiz@layoutdefined}
\newbool{assignpoints@quizquestion@layoutdefined}
\newbool{assignpoints@solution@layoutdefined}
\newbool{assignpoints@subsolution@layoutdefined}
\newbool{assignpoints@usefrenchlanguage}% To be extended for compliance with language packages
\newbool{assignpoints@usegermanlanguage}
\newbool{assignpoints@usenoverbose}

%- Setting the default values (English set-up)

\renewcommand*{\assignpointsdecimalsep}{{.}}
\assignpointsunitsingular{Point}
\assignpointsunitplural{Points}

%- Applying options setup

\DeclareOption{customlayout}{\booltrue{assignpoints@usecustomlayout}}% Motivations? Don't understand
\DeclareOption{noverbose}{\booltrue{assignpoints@usenoverbose}}% Deprecated (no more used)
\DeclareOption{french}{%
  \booltrue{assignpoints@usefrenchlanguage}%
  \renewcommand*{\assignpointsdecimalsep}{{,}}%
  \assignpointsunitsingular{point}% No capital first letter in French
  \assignpointsunitplural{points}% No capital first letter in French
}
\DeclareOption{german}{% German conventions seem to be close to French ones
  \booltrue{assignpoints@usegermanlanguage}%
  \renewcommand*{\assignpointsdecimalsep}{{,}}%
  \assignpointsunitsingular{Punkt}% Correct?
  \assignpointsunitplural{Punkte}% Correct?
}

\DeclareOption*{%- This package does not have any other options
  \PackageWarning{assignpoints}{Unknown option '\CurrentOption'}
}
\ProcessOptions\relax%

%-- Customising exercise/quiz name (easily overwritten or deleted by main class or other packages)

\ifbool{assignpoints@usefrenchlanguage}{%
  \providecommand{\exercisename}{Exercice}
  %\providecommand{\exercisenamenocap}{exercice}
  %\providecommand{\quizname}{Quiz}
  \providecommand{\quizname}{Questionnaire}% Maybe better, but Quiz is now current, mostly with MCQ
  \providecommand{\solutionname}{Solution}
  \providecommand{\totalpointsname}{Total}
  \providecommand{\bonuspointsname}{Bonus}
  \providecommand{\totalwithbonuspointsname}{Total avec bonus}
  \providecommand{\showcaseheaderpointsname}{Points}
  \providecommand{\showcaseheadermaxpointsname}{Points max.}
}{%
  \ifbool{assignpoints@usegermanlanguage}{%
    \providecommand{\exercisename}{Ausübung}% Correct?
    %\providecommand{\exercisenamenocap}{Ausübung}
    \providecommand{\quizname}{Quiz}% Correct?
    \providecommand{\solutionname}{Lösung}% Correct?
    \providecommand{\totalpointsname}{Gesamtzahl}% Correct?
    \providecommand{\bonuspointsname}{Bonus}% Correct?
    \providecommand{\totalwithbonuspointsname}{Gesamtzahl mit bonus}% Correct?
    \providecommand{\showcaseheaderpointsname}{Punkte}% Correct?
    \providecommand{\showcaseheadermaxpointsname}{Max. Punkte}% Correct?
  }{\providecommand{\exercisename}{Exercise}
    %\providecommand{\exercisenamenocap}{exercise}
    \providecommand{\quizname}{Quiz}
    \providecommand{\solutionname}{Solution}
    \providecommand{\totalpointsname}{Total}
    \providecommand{\bonuspointsname}{Bonus}
    \providecommand{\totalwithbonuspointsname}{Total with bonus}
    \providecommand{\showcaseheaderpointsname}{Points}
    \providecommand{\showcaseheadermaxpointsname}{Max. Points}
  }
}

%-- Avoiding nested environments (i.e. putting exercises in exercises, quizzes in quizzes, etc.)

\newbool{assignpoints@inexercise}
\newbool{assignpoints@insubexercise}
\newbool{assignpoints@inquiz}
\newbool{assignpoints@inquizquestion}
\newbool{assignpoints@insolution}
\newbool{assignpoints@insubsolution}

\newif\if@assignpoints@inquiz%
\global\@assignpoints@inquizfalse%
\newif\if@assignpoints@inquizquestion%
\global\@assignpoints@inquizquestionfalse%


%-- Defining a prefix to be applied to storage and read functions of the different environments

\newcommand*{\assignpointsprefix}[1]{#1}% #1 = exercise/quiz/other environment?

%-- Defining counters to store number of exercises/quizzes

\newcounter{assignpoints@exercisecount}
\newcounter{assignpoints@subexercisecount}[assignpoints@exercisecount]
\newcounter{assignpoints@maxsubexercisecount}[assignpoints@exercisecount]

\newcounter{assignpoints@quizcount}
\newcounter{assignpoints@quizquestioncount}[assignpoints@quizcount]

\newcounter{assignpoints@exercisenumber}% To display a synopsis of exercises and their points
\newcounter{assignpoints@totalexercisecount}% To have the number of exercises AT END DOCUMENT

\newcounter{assignpoints@quiznumber}% To display a synopsis of quizzes and their points
\newcounter{assignpoints@totalquizcount}% To have immediatly the number of quizzes AT END DOCUMENT

\newcounter{assignpoints@solutioncount}
\newcounter{assignpoints@subsolutioncount}[assignpoints@solutioncount]

%-- Lengths to store points, thus decimal parts are allowed (astute way to use LaTeX lengths!)
%-- See: https://tex.stackexchange.com/questions/171620/

\newlength{\assignpoints@currentexercisepoints}
\newlength{\assignpoints@currentsubexercisepoints}
\newlength{\assignpoints@exercise@totalpoints}
\newlength{\assignpoints@exercise@bonuspoints}

\newlength{\assignpoints@currentquizpoints}
\newlength{\assignpoints@currentquizquestionpoints}
\newlength{\assignpoints@quiz@totalpoints}
\newlength{\assignpoints@quiz@bonuspoints}

\newlength{\assignedcurrentpoints}% <-- Added for layout adjusting (see \displaypoints below)
\newlength{\assignedcurrentitempoints}% <-- Added for item point(s) displaying
\newlength{\assignedcurrentbonuspoints}% <-- Added for bonus point(s) displaying

\newlength{\exercisetotalpointsdim}% <-- Retrieving a length for the \exercisetotalpoint command
\newlength{\quiztotalpointsdim}% <-- Retrieving a length for the \quiztotalpoint command
\newlength{\exercisetotalpointswhithbonusdim}% <-- Having a length for exercise points with bonus
\newlength{\quiztotalpointswithbonusdim}% <-- Having a length for quizzes points with bonus

%-- Getting total points and total number of exercises/quizzes (whole document)

\ProvideDocumentCommand{\exercisetotalpoints}{ s }{%
  %- At the first run, no value available in the "aux" file --> wait for the second run
  \IfBooleanTF{#1}%
    {\if@assignpoints@firstrun\textit{??}\fi}%
    {\if@assignpoints@firstrun\textit{??}\fi}%
}
\ProvideDocumentCommand{\numberofexercises}{ }{0}
\ProvideDocumentCommand{\numberofsubexercises}{ }{0}% Sometimes useful (e.g. TikZ design)
\ProvideDocumentCommand{\quiztotalpoints}{ s }{%
  %- At the first run, no value available in the "aux" file --> wait for the second run
  \IfBooleanTF{#1}%
    {\if@assignpoints@firstrun\textit{??}\fi}%
    {\if@assignpoints@firstrun\textit{??}\fi}%
}
\ProvideDocumentCommand{\numberofquizzes}{ }{0}
\ProvideDocumentCommand{\numberofexercisesorquizzes}{ }{0}

%-- Getting info about current environments: to be used i.e. in AtBeginExercise/AtEndExercise hooks

\providecommand{\currentexercisetitle}{}
\providecommand{\currentsubexercisetitle}{}

\providecommand{\currentquiztitle}{}
\providecommand{\currentquizquestiontitle}{}

\providecommand{\currentexercisenumber}{%
  \theassignpoints@exercisecount%
}
\providecommand{\currentsubexercisenumber}{%
  \theassignpoints@subexercisecount%
}
\providecommand{\currentquiznumber}{%
  \theassignpoints@quizcount%
}
\providecommand{\currentquizquestionnumber}{%
  \theassignpoints@quizquestioncount%
}

%-- Hooks to modify the exercise/quiz typesetting

%- For exercises
\providecommand{\AtBeginExercise}[1]{
  \renewcommand{\exercisepoints@begin}{#1}%
  \booltrue{assignpoints@exercise@layoutdefined}%
}
\providecommand{\AtEndExercise}[1]{
  \renewcommand{\exercisepoints@end}{#1}
}

%- For subexercises
\providecommand{\AtBeginSubexercise}[1]{
  \renewcommand{\exercisepoints@sub@begin}{#1}
  \booltrue{assignpoints@subexercise@layoutdefined}%
}
\providecommand{\AtEndSubexercise}[1]{
  \renewcommand{\exercisepoints@sub@end}{#1}
}

%- For quizzes
\providecommand{\AtBeginQuiz}[1]{
  \renewcommand{\quizpoints@begin}{#1}%
  \booltrue{assignpoints@quiz@layoutdefined}
}
\providecommand{\AtEndQuiz}[1]{
  \renewcommand{\quizpoints@end}{#1}
}

%- For quizquestions
\providecommand{\AtBeginQuizquestion}[1]{
  \renewcommand{\quizpoints@question@begin}{#1}%
  \booltrue{assignpoints@quizquestion@layoutdefined}%
}
\providecommand{\AtEndQuizquestion}[1]{
  \renewcommand{\quizpoints@question@end}{#1}
}

%- For solutions
\providecommand{\AtBeginSolution}[1]{%
  \renewcommand{\solutionpoints@begin}{#1}%
  \booltrue{assignpoints@solution@layoutdefined}%
}
\providecommand{\AtEndSolution}[1]{
  \renewcommand{\solutionpoints@end}{#1}
}

%- For subsolutions
\providecommand{\AtBeginSubsolution}[1]{%
  \renewcommand{\solutionpoints@subsolution@begin}{#1}%
  \booltrue{assignpoints@subsolution@layoutdefined}%
}
\providecommand{\AtEndSubsolution}[1]{
  \renewcommand{\solutionpoints@subsolution@end}{#1}
}

%-- Storage for the hooks

\newcommand{\exercisepoints@begin}{}
\newcommand{\exercisepoints@end}{}
\newcommand{\exercisepoints@sub@begin}{}
\newcommand{\exercisepoints@sub@end}{}

\newcommand{\quizpoints@begin}{}
\newcommand{\quizpoints@end}{}
\newcommand{\quizpoints@question@begin}{}
\newcommand{\quizpoints@question@end}{}

\newcommand{\solutionpoints@begin}{}
\newcommand{\solutionpoints@end}{}
\newcommand{\solutionpoints@subsolution@begin}{}
\newcommand{\solutionpoints@subsolution@end}{}

%-- A very simple default style for exercise/subexercise environments

\ifbool{assignpoints@usecustomlayout}{}{%
  \AtBeginExercise{%
    \parindent=0pt
    \parskip=0pt
    \vspace{.5\baselineskip}\par\hrule%
    \begingroup
      \sffamily\vspace{4pt}%
      % Empty versus non-empty exercise title
      \iftoggle{assignpoints@checkemptystring}%
        {\textbf{\exercisename~\currentexercisenumber}}%
        {\textbf{\exercisename~\currentexercisenumber}%
          \ifbool{assignpoints@usefrenchlanguage}{%
            \enspace\textemdash\enspace\currentexercisetitle%
          }{%
            \enspace\textendash\enspace\currentexercisetitle%
          }%
        }%
      \hfill\textbf{(\getpoints*[exercise]{\currentexercisenumber})}%
      \vskip 4pt\hrule\vskip 4pt%
    \endgroup
  }
  \AtEndExercise{\vspace{4pt}\hrule\par\vspace{.5\baselineskip}}
  \AtBeginSubexercise{%
    \begingroup
      \par\vspace{2pt}\sffamily%
      % Empty versus non-empty subexercise title
      \iftoggle{assignpoints@checkemptystring}%
        {\emph{\exercisename~\currentexercisenumber.\currentsubexercisenumber}}%
        {\emph{\exercisename~\currentexercisenumber.\currentsubexercisenumber}%
          \ifbool{assignpoints@usefrenchlanguage}{%
            \enspace\textemdash\enspace\emph{\currentsubexercisetitle}%
          }{%
            \enspace\textendash\enspace\emph{\currentsubexercisetitle}%
          }%
        }%
      \dotfill(\emph{\getpoints*[exercise]{\currentexercisenumber.\currentsubexercisenumber}})%
    \endgroup
    \par
  }
  \AtEndSubexercise{\vspace{1pt}\par}
}

%-- A very simple default style for quiz/quizquestion environments

\ifbool{assignpoints@usecustomlayout}{}{%
  \AtBeginQuiz{%
    \parindent=0pt
    \parskip=0pt
    \vspace{.5\baselineskip}\par\hrule%
    \begingroup
      \sffamily\vspace{4pt}%
      \iftoggle{assignpoints@checkemptystring}% Empty versus non-empty quiz title
        {\textbf{\quizname~\currentquiznumber}}%
        {\textbf{\quizname~\currentquiznumber}%
          \ifbool{assignpoints@usefrenchlanguage}{%
            \enspace\textemdash\enspace\currentquiztitle%
          }{%
            \enspace\textendash\enspace\currentquiztitle%
          }%
        }%
      \hfill\textbf{(\getpoints*[quiz]{\currentquiznumber})}%
      \vskip 4pt\hrule\vskip 4pt%
    \endgroup
  }
  \AtEndQuiz{\vspace{4pt}\hrule\par\vspace{.5\baselineskip}}
  \AtBeginQuizquestion{%
    \begingroup
      \par\vspace{2pt}\sffamily%
      \iftoggle{assignpoints@checkemptystring}% Empty versus non-empty subexercise title
        {\emph{\quizname~\currentquiznumber.\currentquizquestionnumber}}%
        {\emph{\quizname~\currentquiznumber.\currentquizquestionnumber}%
          \ifbool{assignpoints@usefrenchlanguage}{%
            \enspace\textemdash\enspace\emph{\currentquizquestiontitle}%
          }{%
            \enspace\textendash\enspace\emph{\currentquizquestiontitle}%
          }%
        }%
      \dotfill(\emph{\getpoints*[quiz]{\currentquiznumber.\currentquizquestionnumber}})%
    \endgroup
    \par
  }
  \AtEndQuizquestion{\vspace{1pt}\par}
}

%-- A very simple default style for solution/subsolution environments

\ifbool{assignpoints@usecustomlayout}{}{%
  \AtBeginSolution{%
    \parindent=0pt
    \parskip=0pt
    \vspace{.5\baselineskip}\par\hrule%
    \begingroup
      \sffamily\vspace{4pt}%
      % Empty versus non-empty solution title
      \ifstrempty{\currentexercisetitle}%
        {\strut\textbf{\solutionname\space\theassignpoints@solutioncount\space%
          (page\space\pageref{exercise:\theassignpoints@solutioncount})}%
        }%
        {\strut\textbf{\solutionname\space\theassignpoints@solutioncount}\space%
          \ifbool{assignpoints@usefrenchlanguage}%
            {\enspace\textemdash\enspace\currentexercisetitle}%
            {\enspace\textendash\enspace\currentexercisetitle}%
          \space(page\space\pageref{exercise:\theassignpoints@solutioncount})%
          \hfill\textbf{(\getpoints*[exercise]{\theassignpoints@solutioncount})}%
        }%
      \vskip 4pt\hrule\vskip 4pt%
    \endgroup
  }
  \AtEndSolution{\vspace{4pt}\hrule\par\vspace{.5\baselineskip}}
  \AtBeginSubsolution{%
    \begingroup
      \par\vspace{2pt}\sffamily%
      % Empty versus non-empty subexercise title
      \iftoggle{assignpoints@checkemptystring}%
        {\emph{\solutionname~\theassignpoints@solutioncount.\theassignpoints@subsolutioncount}}%
        {\emph{\solutionname~\theassignpoints@solutioncount.\theassignpoints@subsolutioncount}%
          \ifbool{assignpoints@usefrenchlanguage}{%
            \enspace\textemdash\enspace\emph{\currentsubexercisetitle}%
          }{%
            \enspace\textendash\enspace\emph{\currentsubexercisetitle}%
          }%
        }%
      \dotfill(\emph{\getpoints*[exercise]{\theassignpoints@solutioncount.\theassignpoints@subsolutioncount}})%
    \endgroup
    \par
  }
  \AtEndSubsolution{\vspace{1pt}\par}
}

%-- Setting points (additive within an exercise or a quiz environment)

\newcommand{\points}[1]{%
  \ifbool{assignpoints@inexercise}{%
    \addtolength{\assignpoints@currentexercisepoints}{#1 pt}%
    \global\assignpoints@currentexercisepoints=\assignpoints@currentexercisepoints%
    \addtolength{\assignpoints@exercise@totalpoints}{#1 pt}%
    \global\assignpoints@exercise@totalpoints=\assignpoints@exercise@totalpoints%
    \ifbool{assignpoints@insubexercise}{%
      \addtolength{\assignpoints@currentsubexercisepoints}{#1 pt}%
      \global\assignpoints@currentsubexercisepoints=\assignpoints@currentsubexercisepoints%
    }{}%
  }{%
    \ifbool{assignpoints@inquiz}{%
      \addtolength{\assignpoints@currentquizpoints}{#1 pt}%
      \global\assignpoints@currentquizpoints=\assignpoints@currentquizpoints%
      \addtolength{\assignpoints@quiz@totalpoints}{#1 pt}%
      \global\assignpoints@quiz@totalpoints=\assignpoints@quiz@totalpoints%
      \ifbool{assignpoints@inquizquestion}{%
        \addtolength{\assignpoints@currentquizquestionpoints}{#1 pt}%
        \global\assignpoints@currentquizquestionpoints=\assignpoints@currentquizquestionpoints%
      }{}%
    }{%
      \PackageError{assignpoints}%
        {\string\points{...} can only be used within exercise/subexercise
          or quiz/quizquestion environments.}%
    }
  }
}

%-- Calling and displaying points flush right for use in itemize/enumerate environments

\NewDocumentCommand{\itempoints}{ s m }{%
  % Usage − star: display points "unit",
  %         {#2}: set points never mind the environment is (which is detected in the \points macro)
  \points{#2}% This macro adds and stores points, the following only display things
  \IfBooleanTF{#1}{%
    %- Checking if #2 is lesser or greater than 1 point (see \displaypoints macro)
    \setlength{\assignedcurrentitempoints}{#2pt}%
    \hfill%
    \ifdimequal{\assignedcurrentitempoints}{0.0pt}{}{% <-- If 0.0pt: no display
      % If <length> pt <= 1.0pt displays "point", else "points"
      \ifdimless{\assignedcurrentitempoints}{1.01pt}%
        {%
          \begingroup\small(%
            \assignpointssplitbefore{\assignedcurrentitempoints}%
            \ifnumequal{\assignpointssplitafter{\assignedcurrentitempoints}}{0}%
              {\space\assignpoints@unitsingular}%
              {\assignpointsdecimalsep%
                \assignpointssplitafter{\assignedcurrentitempoints}%
                  \space\assignpoints@unitsingular}%
          )\endgroup%
        }{%
          \begingroup\small(%
            \assignpointssplitbefore{\assignedcurrentitempoints}%
            \ifnumequal{\assignpointssplitafter{\assignedcurrentitempoints}}{0}%
              {\space\assignpoints@unitplural}%
              {\assignpointsdecimalsep%
                \assignpointssplitafter{\assignedcurrentitempoints}%
                  \space\assignpoints@unitplural}%
          )\endgroup%
        }%
    }%
  }{%
    \ifnumequal{\assignpointssplitafter{#2}}{0}%
      {\hfill{\small(\assignpointssplitbefore{#2})}}%
      {\hfill{\small(\assignpointssplitbefore{#2}%
        \assignpointsdecimalsep\assignpointssplitafter{#2})}}%
  }%
}

%-- Retrieving points for a specific exercise/quiz number as well as subexercise/quizquestion

\NewDocumentCommand{\getpoints}{ s O{exercise} m }{%
  % Usage − star: display points "unit",
  %         [#2]: <env-name> default is exercise environment,
  %         {#3}: number of the environment subexercise/exercise/quiz/quizquestion
  \ifcsname assignpoints@\assignpointsprefix{#2}@points@#3\endcsname% Storage exists
    \ifnumequal{\assignpointssplitafter{#3}}{0}%
      {\def\currentenvnumber{\assignpointssplitbefore{#3}}}%
      {\def\currentenvnumber{\assignpointssplitbefore{#3}.\assignpointssplitafter{#3}}}%
    \ifstrequal{#2}{exercise}%
      {\renewcommand\numberofexercisesorquizzes\numberofexercises}%
      {\renewcommand\numberofexercisesorquizzes\numberofquizzes}%
    \IfBooleanTF{#1}%
    {%- With "unit" i.e. point(s): setting a length and decimal separator language specific
      \ifnumequal{\assignpointssplitbefore{#3}}{0}%
        {\PackageError{assignpoints}{The environment (exercise/quiz...) number cannot be zero}}%
        {\ifnumgreater{\assignpointssplitbefore{#3}}{\numberofexercisesorquizzes}%
          {\PackageWarning{assignpoints}{It seems that you have typed in an exercise/quiz number
            greater than the total number of exercises/quizzes}\textbf{??}}%
          {\setlength{\assignedcurrentpoints}{%
            \assignpoints@readvaluefromaux{\assignpointsprefix{#2}@points}{\currentenvnumber}pt}%
           \global\assignedcurrentpoints=\assignedcurrentpoints%
           % If <length> pt <= 1.0pt displays "point", else "points"
           \ifdimless{\assignedcurrentpoints}{1.01pt}% https://tex.stackexchange.com/questions/2810/
             {\assignpointssplitbefore{\assignedcurrentpoints}%
              \ifnumequal{\assignpointssplitafter{\assignedcurrentpoints}}{0}%
                 {\space\assignpoints@unitsingular}%
                {\assignpointsdecimalsep%
                  \assignpointssplitafter{\assignedcurrentpoints}\space\assignpoints@unitsingular}%
            }{\assignpointssplitbefore{\assignedcurrentpoints}%
              \ifnumequal{\assignpointssplitafter{\assignedcurrentpoints}}{0}%
                {\space\assignpoints@unitplural}%
                {\assignpointsdecimalsep%
                  \assignpointssplitafter{\assignedcurrentpoints}\space\assignpoints@unitplural}%
            }%
          }%
        }%
    }{%- Without "unit" i.e. point(s)
      \ifnumequal{\assignpointssplitbefore{#3}}{0}%
        {\PackageError{assignpoints}{The environment (exercise/quiz...) number cannot be zero}}%
        {\ifnumgreater{\assignpointssplitbefore{#3}}{\numberofexercisesorquizzes}%
          {\PackageWarning{assignpoints}{It seems that you have typed in an exercise/quiz number
            greater than the total number of exercises/quizzes}\textbf{??}}%
          {\def\currentenvpointsnumber{%
            \assignpoints@readvaluefromaux{\assignpointsprefix{#2}@points}{\currentenvnumber}}%
           \ifnumequal{\assignpointssplitafter{\currentenvpointsnumber}}{0}%
               {%\ifnumequal{\assignpointssplitbefore{\currentenvpointsnumber}}{0}%
                   %{}% <-- If points = 0, no display
                   {\assignpointssplitbefore{\currentenvpointsnumber}}%
               }%
              {\assignpointssplitbefore{\currentenvpointsnumber}%
                \assignpointsdecimalsep\assignpointssplitafter{\currentenvpointsnumber}}%
          }%
        }%
    }%
  \else% Storage is empty
    \if@assignpoints@firstrun
      \textit{??}%
    \else
      Failed\space\textbf{??}%
      \PackageWarning{assignpoints}%
        {Storage key not found in aux file. You must type in a valid environment number}%
    \fi%
  \fi%
}

\NewDocumentCommand{\displaypoints}{ s O{exercise} m }{% \getpoints but without display if point=0
  % Usage − star: display points "unit",
  %         [#2]: <env-name> default is exercise environment,
  %         {#3}: number of the environment subexercise/exercise/quiz/quizquestion
  \ifcsname assignpoints@\assignpointsprefix{#2}@points@#3\endcsname% Storage exists
    \ifnumequal{\assignpointssplitafter{#3}}{0}%
      {\def\currentenvnumber{\assignpointssplitbefore{#3}}}%
      {\def\currentenvnumber{\assignpointssplitbefore{#3}.\assignpointssplitafter{#3}}}%
    \ifstrequal{#2}{exercise}%
      {\renewcommand\numberofexercisesorquizzes\numberofexercises}%
      {\renewcommand\numberofexercisesorquizzes\numberofquizzes}%
    \IfBooleanTF{#1}%
    {%- With "unit" i.e. point(s): setting a length and decimal separator language specific
      \ifnumequal{\assignpointssplitbefore{#3}}{0}%
        {\PackageError{assignpoints}{The environment (exercise/quiz...) number cannot be zero}}%
        {\ifnumgreater{\assignpointssplitbefore{#3}}{\numberofexercisesorquizzes}%
          {\PackageWarning{assignpoints}{It seems that you have typed in an exercise/quiz number
            greater than the total number of exercises/quizzes}\textbf{??}}%
          {\setlength{\assignedcurrentpoints}{%
            \assignpoints@readvaluefromaux{\assignpointsprefix{#2}@points}{\currentenvnumber}pt}%
           \global\assignedcurrentpoints=\assignedcurrentpoints%
           % If <length> pt <= 1.0pt displays "point", else "points"
           \ifdimless{\assignedcurrentpoints}{1.01pt}% https://tex.stackexchange.com/questions/2810/
             {\ifnumequal{\assignpointssplitbefore{\assignedcurrentpoints}}{0}%
                 {}% <-- If points = 0, no display
                 {\assignpointssplitbefore{\assignedcurrentpoints}%
                   \ifnumequal{\assignpointssplitafter{\assignedcurrentpoints}}{0}%
                     {\space\assignpoints@unitsingular}%
                    {\assignpointsdecimalsep%
                     \assignpointssplitafter{\assignedcurrentpoints}%
                     \space\assignpoints@unitsingular}%
                }%
            }{\assignpointssplitbefore{\assignedcurrentpoints}%
              \ifnumequal{\assignpointssplitafter{\assignedcurrentpoints}}{0}%
                {\space\assignpoints@unitplural}%
                {\assignpointsdecimalsep%
                  \assignpointssplitafter{\assignedcurrentpoints}\space\assignpoints@unitplural}%
            }%
          }%
        }%
    }{%- Without "unit" i.e. point(s)
      \ifnumequal{\assignpointssplitbefore{#3}}{0}%
        {\PackageError{assignpoints}{The environment (exercise/quiz...) number cannot be zero}}%
        {\ifnumgreater{\assignpointssplitbefore{#3}}{\numberofexercisesorquizzes}%
          {\PackageWarning{assignpoints}{It seems that you have typed in an exercise/quiz number
            greater than the total number of exercises/quizzes}\textbf{??}}%
          {\def\currentenvpointsnumber{%
            \assignpoints@readvaluefromaux{\assignpointsprefix{#2}@points}{\currentenvnumber}}%
           \ifnumequal{\assignpointssplitafter{\currentenvpointsnumber}}{0}%
               {\ifnumequal{\assignpointssplitbefore{\currentenvpointsnumber}}{0}%
                   {}% <-- If points = 0, no display
                   {\assignpointssplitbefore{\currentenvpointsnumber}}%
               }%
              {\assignpointssplitbefore{\currentenvpointsnumber}%
                \assignpointsdecimalsep\assignpointssplitafter{\currentenvpointsnumber}}%
          }%
        }%
    }%
  \else% Storage is empty
    \if@assignpoints@firstrun
      \textit{??}%
    \else
      Failed\space\textbf{??}%
      \PackageWarning{assignpoints}%
        {Storage key not found in aux file. You must type in a valid environment number}%
    \fi%
  \fi%
}

\NewDocumentCommand{\gettitle}{ O{exercise} m }{%
  % Usage − #1 = <env-name>, #2 = <env-number>
  \ifstrequal{#1}{exercise}% For the exercise title
    {% Storage exists
      \ifcsname assignpoints@\assignpointsprefix{#1}@exercisetitle@#2\endcsname%
        \renewcommand{\currentexercisetitle}{%
          \assignpoints@readvaluefromaux{exercise}{exercisetitle@#2}}%
      \else% Storage is empty or not yet available
        \PackageWarning{assignpoints}%
          {Storage key not found in aux file. Maybe you need to recompile?}%
      \fi%
    }{}%
    \ifstrequal{#1}{subexercise}% For the subexercise title
        {% Storage exists  assignpoints@exercise@subexercisetitle@1.1
          \ifcsname assignpoints@\assignpointsprefix{#1}@title@#2\endcsname%
            \renewcommand{\currentsubexercisetitle}{%
              \assignpoints@readvaluefromaux{subexercise}{title@#2}}%
          \else% Storage is empty or not yet available
            \PackageWarning{assignpoints}%
              {Storage key not found in aux file. Maybe you need to recompile?}%
          \fi%
        }{}%
}

%-- Defining a storage function to write in the ".aux" file (key-value: #1 as key and #2 as value)

\newcommand{\assignpoints@storevaluetoaux}[3]{%
  % Usage: #1 = prefix − #2 = <env-number> − #3 = <length-name>
  \immediate\write\@auxout{%
    \string\global\string\long\string\@namedef{assignpoints@#1@#2}{#3}%
  }%
}

%-- Retrieving values from the "aux" file

\newcommand{\assignpoints@readvaluefromaux}[2]{%
  % Usage: #1 = prefix − #2 = <length-value-without-pt>
  %   e.g. \setlength{<length>}{\assignpoints@readvaluefromaux{\assignpoints@prefix{#1}}{#2}pt}
  \ifcsname assignpoints@#1@#2\endcsname%
    \@nameuse{assignpoints@#1@#2}%
  \else%
    \textbf{??}%
    \PackageWarning{assignpoints}%
      {Key 'assignpoints@#1@#2' not found in aux file. Maybe you need to recompile?}%
  \fi%
}

%-- Options environments (see `teXjazz-askreply' package): here only an optional title

\pgfkeys{%
  /assignpoints/.is family, /assignpoints/.cd,
  title/.store in=\assignpoints@title,
  title=,
  %subtitle/.store in=\assignpoints@subtitle,
  %subtitle=,
  ID/.store in=\assignpoints@ID,
  ID=,
}

%-- Setting the skeleton of an exercise environment with an optional title

%- Use \ProvideDocumentEnvironment with \IfValueTF?
\NewDocumentEnvironment{exercise}{ O{} }{% Lets the design to "hooks" AtBeginExercise/AtEndExercise
  \pgfkeys{/assignpoints/.cd, #1}%
  \ifbool{assignpoints@inexercise}{%
    \PackageError{assignpoints}{You cannot nest exercise environments}%
  }{}%
  \ifbool{assignpoints@exercise@layoutdefined}{}{%
    \PackageError{assignpoints}%
      {Option `customlayout' requires you to define an exercise layout using
      at least `\string\AtBeginExercise{...}'}%
  }%
  \global\booltrue{assignpoints@inexercise}%
  \setlength{\assignpoints@currentexercisepoints}{0pt}%
  \global\assignpoints@currentexercisepoints=\assignpoints@currentexercisepoints%
  \ifx\assignpoints@title\@empty% WORKS!
    \toggletrue{assignpoints@checkemptystring}%
  \else
    \togglefalse{assignpoints@checkemptystring}%
    \renewcommand{\currentexercisetitle}{\assignpoints@title}%
  \fi
  %\renewcommand{\currentexercisetitle}{#1}%
  %\ifstrempty{#1}%
  %  {\toggletrue{assignpoints@checkemptystring}}%
  %  {\togglefalse{assignpoints@checkemptystring}}%
  \stepcounter{assignpoints@exercisecount}% Starting the numbering from "1"
  \stepcounter{assignpoints@totalexercisecount}%
  \ifcsname assignpoints@exercise@numberofsubexercises@\currentexercisenumber\endcsname%
    \renewcommand{\numberofsubexercises}{%
      \assignpoints@readvaluefromaux{exercise}{numberofsubexercises@\currentexercisenumber}}%
  \fi
  \phantomsection\label{exercise:\currentexercisenumber}% For correct \pageref link (TeX.SX/49061)
  \exercisepoints@begin%
}{%
  \exercisepoints@end%
  \setcounter{assignpoints@maxsubexercisecount}{\theassignpoints@subexercisecount}%
  \assignpoints@storevaluetoaux%
    {\assignpointsprefix{exercise}@exercisetitle}%
    {\theassignpoints@exercisecount}%
    {\currentexercisetitle}%
  \assignpoints@storevaluetoaux%
    {\assignpointsprefix{exercise}@numberofsubexercises}%
    {\theassignpoints@exercisecount}%
    {\theassignpoints@maxsubexercisecount}%
  \assignpoints@storevaluetoaux%
    {\assignpointsprefix{exercise}@points}%
    {\theassignpoints@exercisecount}%
    {\strip@pt\assignpoints@currentexercisepoints}% https://tex.stackexchange.com/questions/2810/
  \global\boolfalse{assignpoints@inexercise}%
  \togglefalse{assignpoints@checkemptystring}%
}

%-- Setting the skeleton of a subexercise environment with an optional title

\NewDocumentEnvironment{subexercise}{ O{} }{% Lets the design to "hooks" AtBeginExercise/AtEndExercise
  \pgfkeys{/assignpoints/.cd, #1}%
  \ifbool{assignpoints@insubexercise}{%
    \PackageError{assignpoints}{You cannot nest subexercise environments}%
  }{}%
  \ifbool{assignpoints@subexercise@layoutdefined}{}{%
    \PackageError{assignpoints}{Option `customlayout' requires you to define a subexercise
                                layout using at least `\string\AtBeginSubexercise{...}'}
  }%
  \global\booltrue{assignpoints@insubexercise}%
  \setlength{\assignpoints@currentsubexercisepoints}{0pt}%
  \global\assignpoints@currentsubexercisepoints=\assignpoints@currentsubexercisepoints%
  \ifx\assignpoints@title\@empty
    \toggletrue{assignpoints@checkemptystring}%
  \else
    \togglefalse{assignpoints@checkemptystring}%
    \renewcommand{\currentsubexercisetitle}{\assignpoints@title}%
  \fi
  %\renewcommand{\currentsubexercisetitle}{#1}%
  %\ifstrempty{#1}%
  %  {\toggletrue{assignpoints@checkemptystring}}%
  %  {\togglefalse{assignpoints@checkemptystring}}%
  \stepcounter{assignpoints@subexercisecount}% Starting the numbering from "1"
  \exercisepoints@sub@begin%
}{%
  \exercisepoints@sub@end%
  \assignpoints@storevaluetoaux%
    {\assignpointsprefix{subexercise}@title}%
    {\theassignpoints@exercisecount.\theassignpoints@subexercisecount}%
    {\currentsubexercisetitle}%
  \assignpoints@storevaluetoaux%
    {\assignpointsprefix{exercise}@points}%
    {\theassignpoints@exercisecount.\theassignpoints@subexercisecount}%
    {\strip@pt\assignpoints@currentsubexercisepoints}% https://tex.stackexchange.com/questions/2810/
  \global\boolfalse{assignpoints@insubexercise}%
  \togglefalse{assignpoints@checkemptystring}%
}

%-- Setting the skeleton of a quiz environment with an optional title

\newenvironment{quiz}[1][]{% Lets the design to "hooks" AtBeginEQuiz/AtEndQuiz
  \pgfkeys{/assignpoints/.cd, #1}%
  \ifbool{assignpoints@inquiz}{%
    \PackageError{assignpoints}{You cannot nest quiz environments}%
  }{}%
  \ifbool{assignpoints@quiz@layoutdefined}{}{%
    \PackageError{assignpoints}%
      {Option `customlayout' requires you to define an quiz layout using
      at least `\string\AtBeginQuiz{...}'}
  }%
  \global\booltrue{assignpoints@inquiz}%
  \setlength{\assignpoints@currentquizpoints}{0pt}%
  \global\assignpoints@currentquizpoints=\assignpoints@currentquizpoints%
  \ifx\assignpoints@title\@empty% WORKS!
    \toggletrue{assignpoints@checkemptystring}%
  \else
    \togglefalse{assignpoints@checkemptystring}%
    \renewcommand{\currentquiztitle}{\assignpoints@title}%
  \fi%
  %\renewcommand{\currentquiztitle}{#1}%
  %\ifstrempty{#1}%
  %  {\toggletrue{assignpoints@checkemptystring}}%
  %  {\togglefalse{assignpoints@checkemptystring}}%
  \stepcounter{assignpoints@quizcount}%
  \stepcounter{assignpoints@totalquizcount}%
  \quizpoints@begin%
}{%
  \quizpoints@end%
  \assignpoints@storevaluetoaux%
    {\assignpointsprefix{quiz}@points}%
    {\theassignpoints@quizcount}%
    {\strip@pt\assignpoints@currentquizpoints}%
  \global\boolfalse{assignpoints@inquiz}
  \togglefalse{assignpoints@checkemptystring}
}

%-- Setting the skeleton of a quizquestion environment with an optional title

\newenvironment{quizquestion}[1][]{% Lets the design to "hooks" AtBeginQuiquestion/AtEndQuizquestion
  \pgfkeys{/assignpoints/.cd, #1}%
  \ifbool{assignpoints@inquizquestion}{%
    \PackageError{assignpoints}{You cannot nest quizquestion environments}%
  }{}%
  \ifbool{assignpoints@quizquestion@layoutdefined}{}{%
    \PackageError{assignpoints}{Option `customlayout' requires you to define a quizquestion
                                layout using at least `\string\AtBeginQuizquestion{...}'}
  }%
  \global\booltrue{assignpoints@inquizquestion}%
  \setlength{\assignpoints@currentquizquestionpoints}{0pt}%
  \global\assignpoints@currentquizquestionpoints=\assignpoints@currentquizquestionpoints%
  \ifx\assignpoints@title\@empty% WORKS!
    \toggletrue{assignpoints@checkemptystring}%
  \else
    \togglefalse{assignpoints@checkemptystring}%
    \renewcommand{\currentquizquestiontitle}{\assignpoints@title}%
  \fi
  %\renewcommand{\currentquizquestiontitle}{#1}%
  %\ifstrempty{#1}%
  %  {\toggletrue{assignpoints@checkemptystring}}%
  %  {\togglefalse{assignpoints@checkemptystring}}%
  \stepcounter{assignpoints@quizquestioncount}%
  \quizpoints@question@begin%
}{%
  \quizpoints@question@end%
  \assignpoints@storevaluetoaux%
    {\assignpointsprefix{quiz}@points}%
    {\theassignpoints@quizcount.\theassignpoints@quizquestioncount}%
    {\strip@pt\assignpoints@currentquizquestionpoints}%
  \global\boolfalse{assignpoints@inquizquestion}%
  \togglefalse{assignpoints@checkemptystring}%
}

%-- Setting the skeleton of a solution environment

\NewDocumentEnvironment{solution}{ O{} }{% Lets the design to "hooks" AtBeginSolution/AtEndSolution
  \pgfkeys{/assignpoints/.cd, #1}%
  \ifbool{assignpoints@insolution}{%
    \PackageError{assignpoints}{You cannot nest solution environments}%
  }{}%
  \ifbool{assignpoints@solution@layoutdefined}{}{%
    \PackageError{assignpoints}%
      {Option `customlayout' requires you to define an solution layout using
      at least `\string\AtBeginSolution{...}'}%
  }%
  \global\booltrue{assignpoints@insolution}
  \ifx\assignpoints@ID\@empty%
    \stepcounter{assignpoints@solutioncount}%
  \else
    \setcounter{assignpoints@solutioncount}{\assignpoints@ID}%
  \fi
  %- Adding a "hard" solution reference (not a label but having the same functionality)
  %- The aim is to have control on the display if there is no reference
  \assignpoints@storevaluetoaux%
    {\assignpointsprefix{solution}@reference}%
    {\theassignpoints@solutioncount}%
    {\theassignpoints@solutioncount}%
  \gettitle[exercise]{\theassignpoints@solutioncount}%
  \solutionpoints@begin%
}{%
  \solutionpoints@end
  \global\boolfalse{assignpoints@insolution}
}

%-- Setting the skeleton of a subsolution environment

\NewDocumentEnvironment{subsolution}{ G{} }{% Lets the design to "hooks" AtBeginSubsolution...
  \ifbool{assignpoints@insubsolution}{%
    \PackageError{assignpoints}{You cannot nest `subsolution' environments}%
  }{}%
  \ifbool{assignpoints@subsolution@layoutdefined}{}{%
    \PackageError{assignpoints}%
      {Option `customlayout' requires you to define an `subsolution' layout using
      at least `\string\AtBeginSubsolution{...}'}%
  }%
  \global\booltrue{assignpoints@insubsolution}
  \stepcounter{assignpoints@subsolutioncount}%
  \gettitle[subexercise]{\theassignpoints@solutioncount.\theassignpoints@subsolutioncount}%
  \solutionpoints@subsolution@begin%
}{%
  \solutionpoints@subsolution@end%
  \global\boolfalse{assignpoints@insubsolution}
}

%-- Managing the bonus points (maybe no bonus for quizzes?)

\NewDocumentCommand{\bonuspoints}{ O{exercise} m }{% #1 = <prefix-name> − #2 = <bonus-length-value>
  \ifstrequal{#1}{exercise}{%
    \setlength{\assignpoints@exercise@bonuspoints}{#2 pt}%
    \global\assignpoints@exercise@bonuspoints=\assignpoints@exercise@bonuspoints%
    %[\the\assignpoints@exercise@bonuspoints]%
  }{\ifstrequal{#1}{quiz}{%
      \setlength{\assignpoints@quiz@bonuspoints}{#2 pt}%
      \global\assignpoints@quiz@bonuspoints=\assignpoints@quiz@bonuspoints%
      %[\the\assignpoints@quiz@bonuspoints]%
    }{%
      \PackageError{assignpoints}%
        {The environment you want to apply some bonus points has not been yet defined}%
    }% To be continued in case of other environments which have to contain points
  }%
}

\NewDocumentCommand{\getbonuspoints}{ s O{exercise} }{%
  % Usage − star: display point "unit",
  %         [#2]: <env-name> default is exercise environment
  %- At the first run, no value available in the "aux" file --> wait for the second run
  \ifcsname assignpoints@\assignpointsprefix{#2}@points@bonus\endcsname% Storage exists
    \IfBooleanTF{#1}%
    {%- With "unit" i.e. point(s): setting a length and decimal separator language specific
      \IfValueTF{#2}%
        {%
          \setlength{\assignedcurrentbonuspoints}{%
            \assignpoints@readvaluefromaux{\assignpointsprefix{#2}}{points@bonus}pt}%
          \global\assignedcurrentbonuspoints=\assignedcurrentbonuspoints%
          %- If <length> pt <= 1.0pt displays "point", else "points"
          \ifdimless{\assignedcurrentbonuspoints}{1.01pt}%
            {\assignpointssplitbefore{\assignedcurrentbonuspoints}%
            \ifnumequal{\assignpointssplitafter{\assignedcurrentbonuspoints}}{0}%
              {\space\assignpoints@unitsingular}%
              {\assignpointsdecimalsep%
                \assignpointssplitafter{\assignedcurrentbonuspoints}%
                \space\assignpoints@unitsingular}%
            }{\assignpointssplitbefore{\assignedcurrentbonuspoints}%
              \ifnumequal{\assignpointssplitafter{\assignedcurrentbonuspoints}}{0}%
                {\space\assignpoints@unitplural}%
                {\assignpointsdecimalsep%
                  \assignpointssplitafter{\assignedcurrentbonuspoints}%
                  \space\assignpoints@unitplural}%
            }%
        }{%
          \setlength{\assignedcurrentbonuspoints}{%
            \assignpoints@readvaluefromaux{\assignpointsprefix{exercise}}{points@bonus}pt}%
          \global\assignedcurrentbonuspoints=\assignedcurrentbonuspoints%
          %- If <length> pt <= 1.0pt displays "point", else "points"
          \ifdimless{\assignedcurrentbonuspoints}{1.01pt}%
            {\assignpointssplitbefore{\assignedcurrentbonuspoints}%
            \ifnumequal{\assignpointssplitafter{\assignedcurrentbonuspoints}}{0}%
              {\space\assignpoints@unitsingular}%
              {\assignpointsdecimalsep%
                \assignpointssplitafter{\assignedcurrentbonuspoints}%
                \space\assignpoints@unitsingular}%
            }{\assignpointssplitbefore{\assignedcurrentbonuspoints}%
              \ifnumequal{\assignpointssplitafter{\assignedcurrentbonuspoints}}{0}%
                {\space\assignpoints@unitplural}%
                {\assignpointsdecimalsep%
                  \assignpointssplitafter{\assignedcurrentbonuspoints}%
                  \space\assignpoints@unitplural}%
            }%
        }%
    }{%- Without "unit" i.e. point(s)
      \IfValueTF{#2}% TODO: add a decimal separator according to the language
        {\assignpoints@readvaluefromaux{\assignpointsprefix{#2}}{points@bonus}}%
        {\assignpoints@readvaluefromaux{\assignpointsprefix{exercise}}{points@bonus}}%
    }%
  \else% Storage is empty
    \if@assignpoints@firstrun
      \textit{??}%
    \else
      Failed\space\textbf{??}%
      \PackageWarning{assignpoints}%
        {Storage key not found in aux file. You must type in a valid key}%
    \fi%
  \fi%
}

\NewDocumentCommand{\exercisetotalpointswithbonus}{ s }{% Defined below at end document
  %- At the first run, no value available in the "aux" file --> wait for the second run
  \IfBooleanTF{#1}%
    {\if@assignpoints@firstrun\textit{??}\fi}%
    {\if@assignpoints@firstrun\textit{??}\fi}%
}

\NewDocumentCommand{\quiztotalpointswithbonus}{ s }{% Defined below at end document
  %- At the first run, no value available in the "aux" file --> wait for the second run
  \IfBooleanTF{#1}%
    {\if@assignpoints@firstrun\textit{??}\fi}%
    {\if@assignpoints@firstrun\textit{??}\fi}%
}

%-- Miscellaneous

\newcommand{\assignpoints@tabdelim}{&\space}
\newcommand{\assignpointsheaderstyle}[1]{\textit{#1}}

%- Stuff to be factorised... As it could be done...

% At first run, can't have \numberofexercice --> wait for the second run
\NewDocumentCommand{\showcaseexercise}{ s }{%
  \setcounter{assignpoints@exercisenumber}{1}%
  \begin{tabular}{lrr}
    \toprule
    \multicolumn{1}{c}{\assignpointsheaderstyle{\exercisename}} &
    \multicolumn{1}{c}{\assignpointsheaderstyle{\showcaseheadermaxpointsname}} &
    \multicolumn{1}{c}{\assignpointsheaderstyle{\showcaseheaderpointsname}} \\
    \toprule
    \IfBooleanTF{#1}{%
      %- https://tex.stackexchange.com/questions/7590/
      \whiledo{\not{\value{assignpoints@exercisenumber}>\numberofexercises}}{%
        \exercisename\space\theassignpoints@exercisenumber
        \assignpoints@tabdelim \getpoints*{\theassignpoints@exercisenumber}
        \assignpoints@tabdelim \stepcounter{assignpoints@exercisenumber} \\ \midrule
      }%
      \bonuspointsname & \getbonuspoints*[exercise] &  \\ \bottomrule
      \totalpointsname & \exercisetotalpoints* &  \\ \bottomrule
      \totalwithbonuspointsname & \exercisetotalpointswithbonus* & \\
    }{%
      %- https://tex.stackexchange.com/questions/7590/
      \whiledo{\not{\value{assignpoints@exercisenumber}>\numberofexercises}}{%
        \exercisename\space\theassignpoints@exercisenumber%
        \assignpoints@tabdelim \getpoints{\theassignpoints@exercisenumber}
        \assignpoints@tabdelim \stepcounter{assignpoints@exercisenumber} \\ \midrule
      }%
      \bonuspointsname & \getbonuspoints[exercise] & \\ \bottomrule
      \totalpointsname & \exercisetotalpoints & \\ \bottomrule
      \totalwithbonuspointsname & \exercisetotalpointswithbonus & \\
    }%
    \bottomrule
  \end{tabular}
}

% At first run, can't have \numberofquiz --> wait for the second run
\NewDocumentCommand{\showcasequiz}{ s }{%
  \setcounter{assignpoints@quiznumber}{1}%
  \begin{tabular}{lrr}
    \toprule
    \multicolumn{1}{c}{\assignpointsheaderstyle{\quizname}} &
    \multicolumn{1}{c}{\assignpointsheaderstyle{\showcaseheadermaxpointsname}} &
    \multicolumn{1}{c}{\assignpointsheaderstyle{\showcaseheaderpointsname}} \\
    \toprule
    \IfBooleanTF{#1}{%
      \whiledo{\not{\value{assignpoints@quiznumber}>\numberofquizzes}}{%
        \quizname\space\theassignpoints@quiznumber
        \assignpoints@tabdelim \getpoints*[quiz]{\theassignpoints@quiznumber}
        \assignpoints@tabdelim \stepcounter{assignpoints@quiznumber} \\ \midrule
      }%
      \bonuspointsname & \getbonuspoints*[quiz] & \\ \bottomrule
      \totalpointsname & \quiztotalpoints* & \\ \bottomrule
      \totalwithbonuspointsname & \quiztotalpointswithbonus* & \\
    }{%
      \whiledo{\not{\value{assignpoints@quiznumber}>\numberofquizzes}}{%
        \quizname\space\theassignpoints@quiznumber%
        \assignpoints@tabdelim \getpoints[quiz]{\theassignpoints@quiznumber}
        \assignpoints@tabdelim \stepcounter{assignpoints@quiznumber} \\ \midrule
      }%
      \bonuspointsname & \getbonuspoints[quiz] & \\ \bottomrule
      \totalpointsname & \quiztotalpoints & \\ \bottomrule
      \totalwithbonuspointsname & \quiztotalpointswithbonus & \\
    }%
    \bottomrule
  \end{tabular}
}

%-- Reading values from the "aux" file at begin

\AtBeginDocument{% https://tex.stackexchange.com/questions/2810/string-replacement-in-latex/
  \setlength{\assignpoints@exercise@totalpoints}{0pt}% reset total points length (exercise)
  \ifcsname assignpoints@exercise@numberofexercises\endcsname%
    \renewcommand{\numberofexercises}{\assignpoints@readvaluefromaux{exercise}{numberofexercises}}
  \fi%
  \ifcsname assignpoints@exercise@points@total\endcsname%
    \RenewDocumentCommand{\exercisetotalpoints}{ s }{%
      \IfBooleanTF{#1}%
        {%
          \setlength{\exercisetotalpointsdim}{%
            \assignpoints@readvaluefromaux{exercise}{points@total}pt}%
          % If <length> pt <= 1.0pt displays "point", else "points"
          \ifdimless{\exercisetotalpointsdim}{1.01pt}%
            {\assignpointssplitbefore{\exercisetotalpointsdim}%
              \ifnumequal{\assignpointssplitafter{\exercisetotalpointsdim}}{0}%
                {\space\assignpoints@unitsingular}%
                {\assignpointsdecimalsep%
                  \assignpointssplitafter{\exercisetotalpointsdim}%
                  \space\assignpoints@unitsingular}%
            }{\assignpointssplitbefore{\exercisetotalpointsdim}%
              \ifnumequal{\assignpointssplitafter{\exercisetotalpointsdim}}{0}%
                {\space\assignpoints@unitplural}%
                {\assignpointsdecimalsep%
                  \assignpointssplitafter{\exercisetotalpointsdim}%
                  \space\assignpoints@unitplural}%
            }%
        }%
        %{\assignpoints@readvaluefromaux{exercise}{points@total}}%
        {\def\currentenvpointsnumber{%
            \assignpoints@readvaluefromaux{exercise}{points@total}}%
         \ifnumequal{\assignpointssplitafter{\currentenvpointsnumber}}{0}%
             {\assignpointssplitbefore{\currentenvpointsnumber}}%
            {\assignpointssplitbefore{\currentenvpointsnumber}%
              \assignpointsdecimalsep\assignpointssplitafter{\currentenvpointsnumber}}%
        }%
    }%
  \fi%
  \ifcsname assignpoints@exercise@points@totalwithbonus\endcsname%
    \RenewDocumentCommand{\exercisetotalpointswithbonus}{ s }{%
      \IfBooleanTF{#1}%
        {%
          \setlength{\exercisetotalpointswhithbonusdim}{%
            \assignpoints@readvaluefromaux{exercise}{points@totalwithbonus}pt}%
          % If <length> pt <= 1.0pt displays "point", else "points"
          \ifdimless{\exercisetotalpointswhithbonusdim}{1.01pt}%
            {\assignpointssplitbefore{\exercisetotalpointswhithbonusdim}%
              \ifnumequal{\assignpointssplitafter{\exercisetotalpointswhithbonusdim}}{0}%
                {\space\assignpoints@unitsingular}%
                {\assignpointsdecimalsep%
                  \assignpointssplitafter{\exercisetotalpointswhithbonusdim}%
                  \space\assignpoints@unitsingular}%
            }{\assignpointssplitbefore{\exercisetotalpointswhithbonusdim}%
              \ifnumequal{\assignpointssplitafter{\exercisetotalpointswhithbonusdim}}{0}%
                {\space\assignpoints@unitplural}%
                {\assignpointsdecimalsep%
                  \assignpointssplitafter{\exercisetotalpointswhithbonusdim}%
                  \space\assignpoints@unitplural}%
            }%
        }%
        %{\assignpoints@readvaluefromaux{exercise}{points@totalwithbonus}}%
        {\def\currentenvpointsnumber{%
            \assignpoints@readvaluefromaux{exercise}{points@totalwithbonus}}%
         \ifnumequal{\assignpointssplitafter{\currentenvpointsnumber}}{0}%
             {\assignpointssplitbefore{\currentenvpointsnumber}}%
            {\assignpointssplitbefore{\currentenvpointsnumber}%
              \assignpointsdecimalsep\assignpointssplitafter{\currentenvpointsnumber}}%
        }%
    }%
  \fi%
  \setlength{\assignpoints@quiz@totalpoints}{0pt}% reset total points length (quiz)
  \ifcsname assignpoints@quiz@numberofquizzes\endcsname%
    \renewcommand{\numberofquizzes}{\assignpoints@readvaluefromaux{quiz}{numberofquizzes}}%
  \fi%
  \ifcsname assignpoints@quiz@points@total\endcsname%
    \RenewDocumentCommand{\quiztotalpoints}{ s }{%
      \IfBooleanTF{#1}%
        {%
          \setlength{\quiztotalpointsdim}{%
            \assignpoints@readvaluefromaux{quiz}{points@total}pt}%
          % If <length> pt <= 1.0pt displays "point", else "points"
          \ifdimless{\quiztotalpointsdim}{1.01pt}%
            {\assignpointssplitbefore{\quiztotalpointsdim}%
              \ifnumequal{\assignpointssplitafter{\quiztotalpointsdim}}{0}%
                {\space\assignpoints@unitsingular}%
                {\assignpointsdecimalsep%
                  \assignpointssplitafter{\quiztotalpointsdim}%
                  \space\assignpoints@unitsingular}%
            }{\assignpointssplitbefore{\quiztotalpointsdim}%
              \ifnumequal{\assignpointssplitafter{\quiztotalpointsdim}}{0}%
                {\space\assignpoints@unitplural}%
                {\assignpointsdecimalsep%
                  \assignpointssplitafter{\quiztotalpointsdim}%
                  \space\assignpoints@unitplural}%
            }%
        }%
        %{\assignpoints@readvaluefromaux{quiz}{points@total}}%
        {\def\currentenvpointsnumber{%
            \assignpoints@readvaluefromaux{quiz}{points@total}}%
         \ifnumequal{\assignpointssplitafter{\currentenvpointsnumber}}{0}%
             {\assignpointssplitbefore{\currentenvpointsnumber}}%
            {\assignpointssplitbefore{\currentenvpointsnumber}%
              \assignpointsdecimalsep\assignpointssplitafter{\currentenvpointsnumber}}%
        }%
    }%
  \fi%
  \ifcsname assignpoints@quiz@points@totalwithbonus\endcsname%
    \RenewDocumentCommand{\quiztotalpointswithbonus}{ s }{%
      \IfBooleanTF{#1}%
        {%
          \setlength{\quiztotalpointswithbonusdim}{%
            \assignpoints@readvaluefromaux{quiz}{points@totalwithbonus}pt}%
          % If <length> pt <= 1.0pt displays "point", else "points"
          \ifdimless{\quiztotalpointswithbonusdim}{1.01pt}%
            {\assignpointssplitbefore{\quiztotalpointswithbonusdim}%
              \ifnumequal{\assignpointssplitafter{\quiztotalpointswithbonusdim}}{0}%
                {\space\assignpoints@unitsingular}%
                {\assignpointsdecimalsep%
                  \assignpointssplitafter{\quiztotalpointswithbonusdim}%
                  \space\assignpoints@unitsingular}%
            }{\assignpointssplitbefore{\quiztotalpointswithbonusdim}%
              \ifnumequal{\assignpointssplitafter{\quiztotalpointswithbonusdim}}{0}%
                {\space\assignpoints@unitplural}%
                {\assignpointsdecimalsep%
                  \assignpointssplitafter{\quiztotalpointswithbonusdim}%
                  \space\assignpoints@unitplural}%
            }%
        }%
        %{\assignpoints@readvaluefromaux{quiz}{points@totalwithbonus}}%
        {\def\currentenvpointsnumber{%
            \assignpoints@readvaluefromaux{quiz}{points@totalwithbonus}}%
         \ifnumequal{\assignpointssplitafter{\currentenvpointsnumber}}{0}%
             {\assignpointssplitbefore{\currentenvpointsnumber}}%
            {\assignpointssplitbefore{\currentenvpointsnumber}%
              \assignpointsdecimalsep\assignpointssplitafter{\currentenvpointsnumber}}%
        }%
    }%
  \fi%
}

%-- Storing values in the "aux" file at end

\AtEndDocument{%
  \assignpoints@storevaluetoaux{\assignpointsprefix{exercise}}%
    {numberofexercises}{\theassignpoints@exercisecount}%
  \assignpoints@storevaluetoaux{\assignpointsprefix{exercise}@points}%
    {total}{\strip@pt\assignpoints@exercise@totalpoints}%
  \assignpoints@storevaluetoaux{\assignpointsprefix{exercise}@points}%
    {bonus}{\strip@pt\assignpoints@exercise@bonuspoints}%
  \newlength{\assignpoints@exercise@totalpointswithbonus}%
  \setlength{\assignpoints@exercise@totalpointswithbonus}{\assignpoints@exercise@totalpoints}%
  \addtolength{\assignpoints@exercise@totalpointswithbonus}{\assignpoints@exercise@bonuspoints}%
  \assignpoints@storevaluetoaux{\assignpointsprefix{exercise}@points}%
    {totalwithbonus}{\strip@pt\assignpoints@exercise@totalpointswithbonus}%
  \assignpoints@storevaluetoaux{\assignpointsprefix{quiz}}%
    {numberofquizzes}{\theassignpoints@quizcount}%
  \assignpoints@storevaluetoaux{\assignpointsprefix{quiz}@points}%
    {total}{\strip@pt\assignpoints@quiz@totalpoints}%
  \assignpoints@storevaluetoaux{\assignpointsprefix{quiz}@points}%
    {bonus}{\strip@pt\assignpoints@quiz@bonuspoints}%
  \newlength{\assignpoints@quiz@totalpointswithbonus}%
  \setlength{\assignpoints@quiz@totalpointswithbonus}{\assignpoints@quiz@totalpoints}%
  \addtolength{\assignpoints@quiz@totalpointswithbonus}{\assignpoints@quiz@bonuspoints}%
  \assignpoints@storevaluetoaux{\assignpointsprefix{quiz}@points}%
    {totalwithbonus}{\strip@pt\assignpoints@quiz@totalpointswithbonus}%
}

%-- End of the `assignpoints` package



